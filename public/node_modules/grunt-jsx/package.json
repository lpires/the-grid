{
  "name": "grunt-jsx",
  "version": "0.1.8",
  "description": "Gruntfile for JSX",
  "main": "Gruntfile.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/yosuke-furukawa/grunt-jsx"
  },
  "keywords": [
    "grunt",
    "jsx",
    "gruntplugin",
    "compiler"
  ],
  "dependencies": {
    "jsx": "~0.9.x",
    "jsx-linker": "~0.1.x",
    "temporary": "0.0.8"
  },
  "devDependencies": {
    "grunt": "~0.4.4",
    "grunt-contrib-watch": "~0.4.4",
    "grunt-contrib-jshint": "~0.6.0",
    "expect.js": "~0.2.0",
    "grunt-contrib-clean": "~0.4.1"
  },
  "author": {
    "name": "yosuke-furukawa"
  },
  "license": "MIT",
  "contributors": [
    {
      "name": "Yosuke FURUKAWA",
      "url": "http://github.com/yosuke-furukawa"
    },
    {
      "name": "phi",
      "url": "http://github.com/phi1618"
    }
  ],
  "readme": "# grunt-jsx\n[![Build status](https://api.travis-ci.org/yosuke-furukawa/grunt-jsx.png)](https://travis-ci.org/yosuke-furukawa/grunt-jsx)\n\n\n> Compile JSX to Javascript\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-jsx --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-jsx');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.2](https://github.com/gruntjs/grunt-contrib-coffee/tree/grunt-0.3-stable).*\n\n## JSX Task\n_Run this task with the `grunt jsx` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n### Usage example\n\n```js\n  module.exports = function(grunt) {\n    grunt.initConfig({\n      jsx: {\n        client: {\n          src: 'examples/hello.jsx',\n          dest: 'tmp/hello.jsx.js',\n        },\n        server: {\n          src: 'examples/hello.jsx',\n          dest: 'tmp/hello.node.jsx.js',\n          executable: 'node',\n        },\n        release: {\n          src: 'examples/hello.jsx',\n          dest: 'tmp/hello.release.jsx.js',\n          executable: 'node',\n          release: true,\n        },\n        add_search_path: {\n          src: 'examples/import.jsx',\n          dest: 'tmp/import.jsx.js',\n          add_search_path: ['examples/'],\n        },\n      }\n    });\n    grunt.loadNpmTasks('grunt-jsx');\n  };\n```\n\n```shell\n$ grunt jsx:client // jsx --output tmp/hello.jsx.js fixtures/hello.jsx\n$ grunt jsx:server // jsx --output tmp/hello.node.jsx.js --executable node fixtures/hello.jsx\n$ grunt jsx:release // jsx --output tmp/hello.release.jsx.js --executable node --release fixtures/hello.jsx\n$ grunt jsx:add_search_path // jsx --output tmp/import.jsx.js --add-search-path fixtures/ fixtures/import.jsx\n```\n\n## Configs\n\n### src\n\nType: `string`\njsx filepath for compile.\nsetting example: `src: 'main.jsx'`\n\n### dest\n\nType: `string`\noutput javascript path.\nsetting example: `dest: 'main.jsx.js'`\n\n### executable\n\nType: `string`\nadd runtime environment, supported env is `node`, `commonjs` and `web`.\n\n### add_search_path\n\nType: `string` or `array`\nadd a path to search library\nsetting example: `add_search_path: ['lib/', 'lib2/']`\n\n### release\n\nType: `boolean`\ndisable runtime type check and enable optimization\n\n### profile\n\nType: `boolean`\nenables profiler\n\n### optimize\n\nType: `string`\nenables optimization commands.\nsetting example: `optimize: \"no-debug,staticize\"`\n\n### warn\n\nType: `string`\nenables warinings, all, deprecated, none\nsetting example: `warn: \"all\"`\n\n### disable_type_check\n\nType: `boolean`\ndisable run-time type check\n\n### minify\n\nType: `boolean`\ncompress javascript code\n\n### enable_source_map\n\nType: `boolean`\nenables source map debugging info\n\n### mode\n\nType: `string`\nspecifies compilaton mode, compile, parse, doc\n\n### target\n\nType: `string`\nspecifies target lang, javascript, c++\n\n### test\n\nType: `boolean`\nenable test option\n\n### output_rule\n\nType: `hash`\nif dest option is undefined, execute output_rule.\noutput_rule has to be set `regexp` and `replace`.\n\n`regexp` find a string from your `src` and replace the string to `replace` string.\n\n```javascript\nfilename_rule: {\n  src: 'fixtures/hello.jsx',\n  output_rule: {\n    regexp: /fixtures\\/(.*).jsx/,\n    replace: 'tmp\\/$1.js',\n  }\n},\n```\n\n### args\n\nType: `string`\nadd arguments to JSX.\nexample: `args: '--minify --release --add-search-path lib/'`\n\n### ext\n\nType: `string`\nSpcifies file extension. Default value is `'.js'` or `''` (for `--executable node`).\nThese extensions are used if `dest` is not specified or a directory.\n\n# ChangeLogs\n2014/04/09 v0.1.7 Fix Windows bugs (Thanks to shibukawa san).\n\n2013/10/17 v0.1.5 Add JSX linker option (Thanks to shibukawa san).\n\n2013/10/11 v0.1.4 Fix extension bug (Thanks to shibukawa san).\n\n2013/10/03 v0.1.3 Support jsx color (Thanks to shibukawa san).\n\n2013/10/02 v0.1.2 Fix multi src bug (Thanks to shibukawa san).\n\n2013/10/02 v0.1.1 enable ext option (Thanks to shibukawa san).\n\n2013/09/29 v0.1.0 enable test option and output_rule and fix some test errors.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/yosuke-furukawa/grunt-jsx/issues"
  },
  "homepage": "https://github.com/yosuke-furukawa/grunt-jsx",
  "_id": "grunt-jsx@0.1.8",
  "_from": "grunt-jsx@^0.1.8"
}
